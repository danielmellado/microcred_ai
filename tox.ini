[tox]
minversion = 3.18.0
envlist = jupyter,pep8,container

[testenv]
passenv = HOME
setenv = VIRTUAL_ENV={envdir}
install_command = pip install {opts} {packages}
deps = -r{toxinidir}/requirements.txt
allowlist_externals = jupyter
                      podman
                      docker
                      find
                      rm

[testenv:jupyter]
commands = jupyter lab --ip=0.0.0.0 --no-browser --ServerApp.token= --ServerApp.password= --notebook-dir={toxinidir}/notebooks

[testenv:pep8]
basepython = python3
deps = flake8
commands = flake8

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:container]
basepython = python3
deps =
setenv =
    {[testenv]setenv}
    OCI_RUNTIME=podman
allowlist_externals = podman
                      docker
                      id
                      pwd
                      echo
                      which
                      bash
commands =
    # Set OCI runtime (default to podman, can be overridden with OCI_RUNTIME=docker)
    bash -c 'echo "Using OCI runtime: $OCI_RUNTIME"; which $OCI_RUNTIME > /dev/null || (echo "Error: $OCI_RUNTIME not found" && exit 1)'
    # Check if the image exists, build if it doesn't
    bash -c '$OCI_RUNTIME image exists jupyter-torch || $OCI_RUNTIME build -t jupyter-torch -f jupyter_torch.Dockerfile --build-arg USER_ID="$(id -u)" --build-arg GROUP_ID="$(id -g)" .'
    # Run the container
    bash -c '$OCI_RUNTIME run -d -p 8888:8888 -v {toxinidir}/notebooks:/home/torch/work:z -e USER_ID="$(id -u)" -e GROUP_ID="$(id -g)" --name jupyter-torch --replace jupyter-torch'

[flake8]
show-source = true
enable-extensions = H106,H203
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,.ropeproject,__pycache__,.ipynb_checkpoints
